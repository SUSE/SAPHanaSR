{
    "test": "maintenance_with_standby_nodes",
    "name": "standby+online secondary then standby+online primary",
    "purpose": [
        "angi",
        "ScaleOut",
        "maintenance",
        "hana",
        "primary",
        "secondary",
        "cluster"
    ],
    "start": "prereq10",
    "todo": "expectations needs to be fixed - e.g. step20 sHostDown is wrong, because topology will also be stopped. roles will be ::: not master1:...",
    "steps": [
        {
            "step": "prereq10",
            "name": "test prerequisites standby_secn_node",
            "next": "step20",
            "loop": 1,
            "wait": 1,
            "post": "ssn",
            "pSite": "pSiteUp",
            "sSite": "sSiteUp",
            "pHost": "pHostUp",
            "sHost": "sHostUp",
            "pWorker": "pWorkerUp",
            "sWorker": "sWorkerUp"
        },
        {
            "step": "step20",
            "name": "secondary site: node is standby",
            "next": "step30",
            "loop": 120,
            "wait": 2,
            "post": "osn",
            "pSite": "pSiteUp",
            "sSite": "sSiteDown",
            "pHost": "pHostUp",
            "sHost": "sHostDown"
        },
        {
            "step": "step30",
            "name": "secondary site: node back online",
            "next": "step40",
            "loop": 120,
            "wait": 2,
            "todo": "pHost+sHost to check site-name",
            "pSite": "pSiteUp",
            "sSite": [
                "lpt == 10",
                "lss == 1",
                "srr == S",
                "srHook == SWAIT",
                "srPoll == SFAIL"
            ],
            "pHost": "pHostUp",
            "sHost": [
                "clone_state == DEMOTED",
                "roles == master1::worker:",
                "score ~ (-INFINITY|0)"
            ]
        },
        {
            "step": "step40",
            "name": "end recover",
            "next": "step110",
            "loop": 120,
            "wait": 2,
            "pSite": "pSiteUp",
            "sSite": "sSiteUp",
            "pHost": "pHostUp",
            "sHost": "sHostUp"
        },
        {
            "step": "step110",
            "name": "test prerequisites standby_prim_node",
            "next": "step120",
            "loop": 1,
            "wait": 1,
            "post": "spn",
            "pSite": "pSiteUp",
            "sSite": "sSiteUp",
            "pHost": "pHostUp",
            "sHost": "sHostUp"
        },
        {
            "step": "step120",
            "name": "primary site: node is standby",
            "next": "step130",
            "loop": 120,
            "wait": 2,
            "pSite": "pSiteDown",
            "sSite": [
                "lpt >~ 1000000000:30",
                "lss == 4",
                "srr == S",
                "srHook ~ (PRIM|SOK)",
                "srPoll == SOK"
            ],
            "pHost": "pHostDown",
            "sHost": [
                "clone_state == PROMOTED",
                "roles == master1:master:worker:master",
                "score ~ (100|145)"
            ]
        },
        {
            "step": "step130",
            "name": "takeover on secondary",
            "next": "final140",
            "loop": 120,
            "post": "opn",
            "wait": 2,
            "pSite": [
                "lss == 1",
                "srr == P",
                "lpt == 10",
                "srHook == SWAIT",
                "srPoll == SFAIL"
            ],
            "sSite": "pSiteUp",
            "pHost": [
                "clone_state == UNDEFINED",
                "roles == master1::worker:",
                "score == 150",
                "standby == on"
            ],
            "sHost": "pHostUp"
        },
        {
            "step": "final140",
            "name": "end recover",
            "next": "END",
            "loop": 120,
            "wait": 2,
            "post": "cleanup",
            "remark": "pXXX and sXXX are now exchanged",
            "pSite": "sSiteUp",
            "sSite": "pSiteUp",
            "pHost": "sHostUp",
            "sHost": "pHostUp",
            "pWorker": "sWorkerUp",
            "sWorker": "pWorkerUp"
        }
    ]
}
