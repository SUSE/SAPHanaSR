{
    "test": "kill_prim_site_nodes",
    "name": "Kill all primary site nodes",
    "purpose": [
        "classic",
        "ScaleOut",
        "kill",
        "primary",
        "node",
        "site",
        "fencing",
        "taaeover"
    ],
    "start": "prereq10",
    "steps": [
        {
            "step": "prereq10",
            "name": "test prerequisites",
            "next": "step20",
            "loop": 1,
            "wait": 1,
            "post": "shell sct_test_kill_prim_site_nodes",
            "global": "sync_state_sok",
            "pSite": "pSiteUp",
            "sSite": "sSiteUp",
            "pHost": "pHostUp",
            "sHost": "sHostUp",
            "pWorker": "pWorkerUp",
            "sWorker": "sWorkerUp"
        },
        {
            "step": "step20",
            "name": "failure detected",
            "next": "step40",
            "loop": 120,
            "wait": 2,
            "global": "sync_state_sok",
            "sSite": "sSiteUp",
            "sHost": "sHostUp",
            "sWorker": "sWorkerUp", 
            "todo": "fix pSite, pHost, pWorker",
            "sSite": [],
            "pHost": [],
            "pWorker": [] 
        },
        {
            "step": "step40",
            "name": "begin recover",
            "next": "final50",
            "loop": 120,
            "wait": 2,
            "global": "sync_state_sok_or_sfail",
            "todo": "fix sSite, sHost, sWorker",
            "todo": "fix pSite, pHost, pWorker",
            "sSite": [],
            "sHost": [],
            "sWorker": [],
            "pSite": [],
            "pHost": [],
            "pWorker": []
        },
        {
            "step": "final50",
            "name": "end recover",
            "next": "END",
            "loop": 240,
            "wait": 2,
            "post": "cleanup",
            "global": "sync_state_sok",
            "pSite": "sSiteUp",
            "pHost": "sHostUp",
            "pWorker": "sWorkerUp",
            "sSite": "pSiteUp",
            "sHost": "pHostUp",
            "sWorker": "pWorkerUp"
        }
    ]
}
