.\" Version: 1.2
.\"
.TH susHanaSR.py 7 "10 Jan 2025" "" "SAPHanaSR"
.\"
.SH NAME
susHanaSR.py \- Provider for SAP HANA srHook method srConnectionChanged().
.PP
.\"
.SH DESCRIPTION
susHanaSR.py can be used to provide a script for the SAP HANA srHook method
srConnectionChanged().

The SAP HANA nameserver provides a Python-based API ("HA/DR providers"), which
is called at important points of the host auto-failover and system replication
takeover process. These so called hooks can be used for arbitrary operations that
need to be executed. The method srConnectionChanged() is called on the master
nameserver as soon as one of the replicating services loses or establishes
the system replication connection. This method is called only once.

susHanaSR.py updates the cluster attribute srHook at changes of the HANA system
replication status. Thus this attribute is more reliable than the attribute
sync_state which is polled by RA monitors.

This hook script needs to be configured and activated on all HANA nodes.
.PP
.\"
.SH SUPPORTED PARAMETERS
* The "HA/DR providers" API accepts the following parameters for the
ha_dr_provider_sushanasr section:
.TP
\fB[ha_dr_provider_sushanasr]\fP
.TP
\fBprovider = susHanaSR\fP
Mandatory. Must not be changed.
.TP
\fBpath = /usr/share/SAPHanaSR-angi\fP
Mandatory. Please change only if requested.
.TP
\fBexecution_order = [ INTEGER ]\fP
Mandatory. Order might depend on other hook scripts.
.PP
* The "HA/DR providers" API accepts the following parameter for the trace section:
.TP
\fB[trace]\fP
.TP
\fBha_dr_sushanasr = [ info | debug ]\fP
Optional. Will be added automatically if not set.
.PP
* The he SAPHanaController RA recognize the effecting system
replication status via attributes in the CIB´s SAPHanaSR properties section.
The SAP System Indentifier (sid) is given in lower case:
.TP
\fBhana_${sid}_site_srHook_${site} = [ SOK | SFAIL | SWAIT ]\fP
.TP
Note: SAPHanaSR-ScaleOut comes with a SAPHanaSR.py that provides global attributes.
.PP
.\"
.SH RETURN CODES
.B 0
Successful program execution.
.br
.B >0
Usage, syntax or execution errors.
.PP
.\"
.SH EXAMPLES
.PP
\fB*\fR Example for entry in sudo permissions /etc/sudoers.d/SAPHanaSR
.PP
.RS 2
# SAPHanaSR needs for srHook
.br
ha1adm ALL=(ALL) NOPASSWD: /usr/sbin/crm_attribute -n hana_ha1_site_srHook_*
.RE
.PP
\fB*\fR Example for looking up the sudo permission for the srHook script.
.br
All related files (/etc/sudoers and /etc/sudoers.d/*) are scanned.
Example SID is HA1.
.PP
.RS 2
# sudo -U ha1adm -l | grep "NOPASSWD.*crm_attribute.*hana_ha1"
.RE
.PP
\fB*\fR Example for checking HANA´s python version.
.br
This might be done before installing HADR provider hook scripts. SID is HA1.
.PP
.RS 2
# su - ha1adm -c "python --version"
.RE
.PP
\fB*\fR Example for entry in SAP HANA global configuration
/hana/shared/$SID/global/hdb/custom/config/global.ini
.br
This file is needed at both sites. The HANA has to be stopped before the files
can be edited.
.PP
.RS 2
[ha_dr_provider_sushanasr]
.br
provider = susHanaSR
.br
path = /usr/share/SAPHanaSR-angi
.br
execution_order = 1
.br
[trace]
.br
ha_dr_sushanasr = info
.RE
.PP
\fB*\fR Example for entry in SAP HANA 2.0 global configuration
/hana/shared/$SID/global/hdb/custom/config/global.ini to enable multi-target aware third site.
.br
This entry is needed to allow ocf_suse_SAPHanaController(7) parameter
AUTOMATED_REGISTER=true in multi-target environments.
The HANA has to be stopped before the files can be edited.
Do not copy the file between nodes. Please check SAP HANA documentation for details.
.PP
.RS 2
[system_replication]
.br
 ...
.br
register_secondaries_on_takeover = true
.br
 ...
.RE
.PP
* Example for entry in SAP HANA 2.0 nameserver configuration
/hana/shared/$SID/global/hdb/custom/config/nameserver.ini for two-node scale-out HANA without standby nodes.
.br
This entry is needed at both sites that are managed by the Linux cluster.
The HANA has to be stopped before the files can be edited. Do not copy the file
between nodes. It might be necessary to un-register and re-register the secondary
to make the change effective on the secondary site. 
Please check SAP HANA documentation for details. In this example the master node
is suse11, the worker is suse12, the instance number is 00. See also
SAPHanaSR-ScaleOut_basic_cluster(7).
.PP
.RS 2
[landscape]
 ...
.br
master = suse11:31001
.br
worker = suse11 suse12
.br
active_master = suse11:31001
.br
roles_suse11 = worker
.br
roles_suse12 = worker
 ...
.RE
.PP
\fB*\fR Example for checking the system log for srHook setting HANA system replication status in the CIB properties section.
.br
To be executed on respective HANA primary site's master nameserver.
.PP
.RS 2
# grep "sudo.*crm_attribute.*srHook" /var/log/messages
.RE
.PP
\fB*\fR Example for checking the HANA tracefiles for srConnectionChanged() events.
.br
To be executed on respective HANA primary site's master nameserver.
.PP
.RS 2
# su - sleadm
.br
~> cdtrace
.br
~> grep susHanaSR.srConnectionChanged.*called nameserver_*.trc
.br
~> grep susHanaSR.*crm_attribute nameserver_*.trc
.br
# exit
.RE
.PP
\fB*\fR Example for checking the HANA tracefiles for when the hook script has been loaded.
.br
To be executed on both sites' master nameservers.
.PP
.RS 2
# su - sleadm
.br
~> cdtrace
.br
~> grep HADR.*load.*susHanaS nameserver_*.trc
.RE
.PP
\fB*\fR Example for comparing Linux cluster srHook attribute with current HANA SR state.
.br
SID is HA1. To be executed on current HANA primary site.
.PP
.RS 2
# SAPHanaSR-showAttr | grep -A4 srHook
.br
# su - ha1adm -c "HDBSettings.sh systemReplicationStatus.py"
.RE
.PP
\fB*\fR Potentially dangerous example for manually changing Linux cluster srHook
attribute according to current HANA SR state.
.br
This might be desired if the HANA SR state has changed while the Linux cluster
was completely down. SID is ICE, site is BERG, current HANA SR state is SFAIL.
.br
Note: Understand the impact before trying.
.PP
.RS 2
# su - iceadm -c "HDBSettings.sh systemReplicationStatus.py"
.br
# cs_clusterstate -i
.br
# crm_attribute -n hana_ice_site_srHook_BERG -v SFAIL -t crm_config -s SAPHanaSR
.br
# SAPHanaSR-showAttr
.RE
.PP
\fB*\fR Example for removing orphaned global srHook attribute.
.br
This might be done after upgrading from old-style srHook, to avoid confusion
caused by different HANA HADR provider API versions.
SID is HA1.
.\" TODO scale-up: SID is HA1, node is node1. All nodes need to be cleaned.
.\" TODO scale-up: # crm_attribute --delete -t nodes --node node1 --name hana_ha1_glob_srHook
.\" TODO double check orphaned attributes to be removed
.PP
.RS 2
# SAPHanaSR-showAttr
.br
# crm configure show SAPHanaSR
.br
# cs_clusterstate -i
.br
# crm_attribute --delete -t crm_config --name hana_ha1_glob_srHook
.br
# crm configure show SAPHanaSR
.br
# SAPHanaSR-showAttr
.RE
.PP
\fB*\fR Example for temporarily blocking HANA system replication.
.br
This could be done for testing the HA/DR provider hook script integration.
Blocking the HANA system replication is dangerous. This test should not be done
on production systems.
Instance number is 00, the resulting network ports are depending on the HANA
setup. Please refer to SAP HANA documentation. See also manual page iptables(8).  
.br
Note: Understand the impact before trying.
.PP
1. Check HANA and Linux cluster for clean idle state.
.PP
2. On secondary, check for used network ports.
.RS 2
# ss -tulpan | grep hdb.*server | grep -v 127.0.0.1 |\\
.br
grep -v "\\*" | awk '{print $6}' | awk -F: '{print $2}'
.RE
.PP
3. On secondary, block HANA system replication, example ports are 4000[123].
.RS 2
# iptables -I INPUT -p tcp -m multiport --ports 40001,40002,40003 -j ACCEPT
.RE
Note: The ACCEPT needs to be replaced by appropriate action.
.PP
4. Check the nameserver tracefile for srConnectionChanged() events, check the
system log for crm_attribute calls, check the Linux cluster attributes for srHook
status.
.PP
5. On secondary, unblock HANA system replication.
.RS 2
# iptables -D INPUT -p tcp -m multiport --ports 40001,40002,40003 -j DROP
.RE
.PP
6. Check the nameserver tracefile for srConnectionChanged() events, check the
system log for crm_attribute calls, check the Linux cluster attributes for srHook
status.
.PP
7. Check HANA and Linux cluster for clean idle state.
.PP
.\"
.SH FILES
.TP
/usr/share/SAPHanaSR-angi/susHanaSR.py
the hook provider, delivered with the RPM
.TP
/hana/shared/$SID/global/hdb/custom/config/global.ini
the on-disk representation of HANA global system configuration
.TP
/hana/shared/$SID/global/hdb/custom/config/nameserver.ini
the on-disk representation of HANA nameserver configuration
.TP
/etc/sudoers , /etc/sudoers.d/*
the sudo permissions configuration
.TP
/usr/sap/$SID/HDB$nr/$HOST/trace
path to HANA tracefiles
.TP
/usr/sap/$SID/HDB$nr/.crm_attribute.$SITE
the internal cache for srHook status changes while Linux cluster is down, file is owned and read/write by ${sid}adm and must never be touched
.PP
.\"
.SH REQUIREMENTS
.PP
1. SAP HANA 2.0 SPS05 rev.059.04 or later provides Python 3 as well as the HA/DR
provider hook method srConnectionChanged() with multi-target aware parameters.
The Python 3 and multi-target aware parameters are needed for the SAPHanaSR-angi
package.
.PP
2. No other HADR provider hook script should be configured for the
srConnectionChanged() method. Hook scripts for other methods, provided in
SAPHanaSR-angi, can be used in parallel to susHanaSR.py, if not documented
contradictingly.
.PP
3. The user ${sid}adm needs execution permission as user root for the command
crm_attribute.
.PP
4. The user ${sid}adm needs ownership and read/write permission on the internal
cache file /usr/sap/$SID/HDB$nr/.crm_attribute.$SITE and its parent directory.
.PP
5. The hook provider needs to be added to the HANA global configuration,
in memory and on disk (in persistence).
.PP
6. The srHook script runtime almost completely depends on call-outs to OS and
Linux cluster.
.\"
.SH BUGS
.PP
In case of any problem, please use your favourite SAP support process to open
a request for the component BC-OP-LNX-SUSE.
Please report any other feedback and suggestions to feedback@suse.com.
.PP
.\"
.SH SEE ALSO
.PP
\fBSAPHanaSR-angi\fP(7) ,
\fBocf_suse_SAPHanaTopology\fP(7) , \fBocf_suse_SAPHanaController\fP(7) ,
\fBocf_heartbeat_IPaddr2\fP(7) ,
\fBsusCostOpt.py\fP(7) , \fBsusTkOver.py\fP(7) , \fBsusChkSrv.py\fP (7) ,
\fBSAPHanaSR-showAttr\fP(8) ,
\fBSAPHanaSR-manageProvider\fP(8) , \fBSAPHanaSR-hookHelper\fP(8) ,
\fBcrm_attribute\fP(8) , \fBsudo\fP(8) , \fBsudoers\fP(5), \fBpython\fP(8) ,
\fBiptables\fP(8) , \fBss\fP(8) ,
.br
https://help.sap.com/docs/SAP_HANA_PLATFORM?locale=en-US
.br
https://help.sap.com/docs/SAP_HANA_PLATFORM/6b94445c94ae495c83a19646e7c3fd56/5df2e766549a405e95de4c5d7f2efc2d.html?locale=en-US
.PP
.\"
.SH AUTHORS
.PP
A.Briel, F.Herschel, L.Pinne.
.PP
.\"
.SH COPYRIGHT
.PP
(c) 2015-2017 SUSE Linux GmbH, Germany.
.br
(c) 2018-2025 SUSE LLC
.br
susHanaSR.py comes with ABSOLUTELY NO WARRANTY.
.br
For details see the GNU General Public License at
http://www.gnu.org/licenses/gpl.html
.\"
