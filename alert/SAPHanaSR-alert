#!/bin/bash
#
# SAPHanaSR-alert
# Author:       Lars Pinne Fabian Herschel, June 2024
# Support:      linux@sap.com
# License:      GNU General Public License (GPL)
# Copyright:    (c) 2024 SUSE LLC
# 2024-06-11-17:40
#
# crm configure alert nodes-1 "/usr/bin/SAPHanaSR-alert" select nodes
# crm configure alert fencing-1 "/usr/bin/SAPHanaSR-alert" select fencing
#

/usr/bin/logger "SAPHanaSR-alert: init"
CRM_alert_recipient=/dev/null
cache_file="/run/crm/SAPHanaSR_site_cache"

function process_fencing()
{
	# SAPHanaSR_site_cache has format (each line) host:site_name
	# figure out fenced site
	
	if [[ -e "$cache_file" ]]; then
		fenced_site_name=$(awk -F: '$1 == host { print $2 }' host="${CRM_alert_node}" "$cache_file")
		local_site_name=$(awk -F: '$1 == host { print $2 }' host="${HOSTNAME}" "$cache_file")
		if [[ "$local_site_name" != "" && "$fenced_site_name" == "$local_site_name" ]]; then
			/usr/bin/logger "SAPHanaSR-alert: Fence-Decision: FENCE ($fenced_site_name == $local_site_name)"
			/usr/sbin/crm --force node fence "${HOSTNAME}"; rc="$?"
			if [[ "$rc" != "0" ]]; then
				/usr/bin/logger "SAPHanaSR-alert: /usr/sbin/crm --force node fence ${HOSTNAME}; rc=$rc"
			fi
		else
			/usr/bin/logger "SAPHanaSR-alert: Fence-Decision: NO FENCE ($fenced_site_name != $local_site_name)"
		fi
	else
	    /usr/bin/logger "SAPHanaSR-alert: Fence-Decision: NO FENCE (no cache)"
	fi
}


case "$CRM_alert_kind" in
    node|nodes)
	msg="Node '${CRM_alert_node}' is now '${CRM_alert_desc}'"
    ;;
    fencing)
	msg="Fencing for '${CRM_alert_node}': ${CRM_alert_desc}"
	process_fencing
    ;;
    *)
	    msg="Unhandled $CRM_alert_kind alert (${CRM_alert_desc})"
    ;;
esac
/usr/bin/logger "SAPHanaSR-alert: $msg"
#
