.\" Version: 1.2
.\"
.TH SAPHanaSR-tests-syntax 5 "10 Jan 2025" "" "SAPHanaSR-angi"
.\"
.SH NAME
SAPHanaSR-tests-syntax \- Syntax for SAPHanaSR test cases and properties.
.PP
.\"
.SH DESCRIPTION
.\"
SAPHanaSR-tester is a suite of tools for automating functional tests of SAP HANA
system replication HA clusters.
.PP
Test cases are defined in dedicated files. Each test is separated into steps.
For each step there is an expectation for SAPHanaSR attributes, which need to
match. Additionally each step defines the 'next' step and an optional action
to be triggered if the step status has been reached (all expectations match).
See section SYNTAX below for comparators and other details.
.PP
For tests involving complex actions on the cluster nodes, predefined shell
scripts are executed remotely.
.\" TODO state machine.
.PP
See manual pages SAPHanaSR-tests-angi-ScaleUp(7) and
SAPHanaSR-tests-angi-ScaleOut(7) for predefined test cases.
.PP
.\"
.SH SYNTAX
.\"
Test cases are defined in JSON files. Each test case is described in one file.
It also can reference to defaults.json for common status definitions.
.PP
TODO on first level
[ test | name | purpose | start | comment | steps ]
.\" TODO comment or remark?
.PP
.TP
\fBtest\fP
test identifier, unique
.TP
\fBname\fP
test description
.TP
\fBpurpose\fB
list of keywords, indicating which topology, components and case is tested, see below - [ angi | classic ] [ ScaleUp | ScaleOut ] [ master | worker ] [ ... ]
.TP
\fBstart\fP
name of step to start the test with
.TP
\fBcomment\fP
comment, just a string
.TP
\fBsteps\fP
test steps - [ step | name | next | loop | wait | post | comment | <status> ]
.TP
\fBstep\fP
step identifier, unique
.TP
\fBname\fP
step description
.TP
\fBnext\fP
name of step to do next
.TP
\fBloop\fP
maximum number of loops to wait and check for status
.TP
\fBwait\fP
how many seconds to wait for each loop TODO
.TP
\fBcomment\fP
comment, just a string
.TP
\fBstatus\fP
status definition, see below
.TP
\fBstart\fP
name of step to start the test with
.TP
\fBcomment\fP
comment, just a string
.PP
\fB*\fP Test purpose
.\" TODO script to list/find testcases by purpose
.PP
TODO
.TP
alert
test alert agent
.TP
angi
SAPHanaSR-angi
.TP
classic
SAPHanaSR or SAPHanaSR-ScaleOut
.TP
cluster
test cluster failure
.TP
degraded
test leads to degraded HANA (lss=2), HANA recovers on its own
.TP
fencing
test leads to node fencing
.TP
hadr
test HANA HA/DR provider hook script
.TP
hana
test HANA failure
.TP
kill
kill something, for testing a failure
.TP
maintenance
test a maintenance procedure
.TP
master
test on HANA master nameserver node
.TP
network
test network failure
.TP
node
test node failure
.TP
primary
test failure at primary site
.TP
progressive
configuration variant "progressive"
.TP
ScaleOut
scale-out topology
.TP
ScaleUp
scale-up topology
.TP
secondary
test failure at secondary site
.TP
site
failure of complete site (all nodes)
.TP
split-brain
test split-brain
.TP
storage
test storage or IO stack failure
.TP
worker
test on HANA worker node
.PP
\fB*\fP Test step status <status>
.PP
Each step contains an expectation for SAPHanaSR attributes, which need to match.
The attributes are arranged along the CIB and SAPHanaSR-showAttr sections. 
The 
.PP
[ pHost | sHost | pWorker | sWorker | pSite | sSite | pGlobal | sGlobal ]
.PP
.TP
pHost, sHost, pWorker, sWorker
node attributes
.TP
pSite, sSite
site attributes
.TP
pGlobal, sGlobal
global attributes, not yet implmented
.PP
See manual page SAPHanaSR-showAttr(8) for details on that attributes.
.PP
Some common status are predefind as defaults:
.TP
globalUp
both sites are up and in sync
.TP
globalDown
not yet implemented
.TP
pHostUp
host p (expected to be primary before the test starts) is up (scale-out: expected primary master node)
.TP
pWorkerUp
worker node p is up (scale-out)
.TP
pSiteUp
site p is up
.TP
sSiteUp
site s (expected to be secondary before the test starts) is up  
.TP
sHostUp
host s is up (scale-out: master node)
.TP
sWorkerUp
worker node s is up (scale-out)
.TP
pHostDown
host p is down (scale-out: master node)
.TP
pWorkerDown
worker node p is down (scale-out)
not yet implemented
.TP
pSiteDown
site p is down 
.TP
sSiteDown
site s is down 
.TP
sHostDown
host s is down (scale-out: master node)
.TP
sWorkerDown
worker node s is down (scale-out)
not yet implemented
.PP
Note: Prefixes "s" and "p" are statically indicating geographical sites, as
seen at the beginning of a test. If a takeover happens during that test, the
final secondary site might be prefixed "p".
.PP
Each test step status is described by one or more conditions. Each condition
is described by one comparision. This conditions are combined by logical "AND".
Each comparision consists of one CIB SAPHanaSR attribute name, one comparator
and one value or regular expression. This comparator and expression could
contain logical "OR". A status with two conditions looks like this:
.PP
"<\fITEST_STEP_STATUS\fP>": [
.br
               "<\fIPARAMETER_NAME\fP> <\fICOMPARATOR\fP> <\fIVALUE\fP>" ,
.br
               "<\fIPARAMETER_NAME\fP> <\fICOMPARATOR\fP> <\fIVALUE\fP>"
.br
           ]
.PP
A set of comparators is implemented. Some take integers, some take regular
expression. In addition the "None" TODO. 
.\" saphana_sr_test.py
.\" re.search("(.*) (==|!=|>|>=|<|<=|~|!~|>~|is) (.*)", single_check)
.TP
==
equal, integer
.TP
!=
not equal, integer
.TP
>=
greater or equal, integer
.TP
<=
less or equal, interger
.TP
>
greater, integer
.TP
<
less
.TP
>~
greater or like, first field integer and second field regular expression
( <\fIINTEGER\fP>:<\fIREGULAR_EXPRESSION\fP> )
.TP
~
like, regular expression
.TP
!~
not like, regular expression
.TP
is
TODO, the string "None"
.PP
\fB*\fP Test step action "post"
.PP
TODO
.PP
action on cluster after step, one of:
.TP
bmt
block manual takeover
.TP
cleanup
cleanup Linux cluster resource failure
.TP
kill_prim_worker_node
kill pirmary worker node (scale-out)
.TP
kill_prim_node
kill pirmary node (scale-out: primary master node)
.TP
kill_secn_worker_node
kill secondary worker node (scale-out)
.TP
kill_secn_node
kill secondary node (scale-out: secondary master node)
.TP
kill_prim_inst
kill pirmary instance (scale-out: primary master instance)
.TP
kill_prim_worker_inst
kill worker pirmary instance (scale-out)
.TP
kill_secn_inst
kill secondary instance (scale-out: secondary master instance)
.TP
kill_secn_worker_inst
kill worker secondary instance (scale-out)
.TP
kill_secn_indexserver
kill secondary indexserver (scale-out: secondary master indexserver)
.TP
kill_prim_worker_indexserver
kill primary worker indexserver (scale-out)
.TP
kill_secn_worker_indexserver
kill secondary worker indexserver (scale-out)
.TP
kill_secn_nameserver
kill secondary nameserver (scale-out: secondary master nameserver)
.TP
kill_prim_nameserver
kill primary nameserver (scale-out: primary master nameserver)
.TP
simulate_split_brain
break corosync communcation
.TP
spn
standby primary node (scale-out: primary master)
.TP
ssn
standby secondary node (scale-out: secondary master)
.TP
standby_secn_worker_node
standby secondary worker node (scale-out)
.TP
opn
online primary node (scale-out: primary master)
.TP
osn
online seconary node (scale-out: secondary master)
.TP
online_secn_worker_node
online secondary worker node (scale-out)
.TP
script <script>
execute predefined script
.TP
shell <command>
execute command
.TP
sleep <seconds>
sleep some seconds
.PP
See also manual pages SAPHanaSR-tests-angi-ScaleUp(7), 
SAPHanaSR-tests-angi-ScaleOut(7) and SAPHanaSR-tests-description(7).
.PP
\fB*\fP Test system properties
.PP
This properties are decribing the test system. The properties are separated from
the test cases, because they need to be adapted for each system. The values are
static during test run and common for all test on one system.
The test cases on the other hand are mostly similar for all test systems.
.PP
TODO
.br
{
.RS 5
.br
"sid": "\fISID\fP",
.br
"instNo": "\fINR\fP",
.br
"mstResource": "\fISTRING\fP",
.br
"clnResource": "\fISTRING\fP",
.br
"ipAddr": "\fIIPADDRESS\fP",
.br
"userKey": "\fISTRING\fP"
.br
.RE 
}
.PP
See also EXAMPLES section in manual page SAPHanaSR-tester(7).
.PP
\fB*\fP Test results
.PP
See manual page SAPHanaSR-testCluster(8) for TODO
.PP
.\"
.SH EXAMPLES
.\"
TODO
.PP
.\"
.SH FILES
.\"
.TP
/usr/share/SAPHanaSR-tester/json/angi-ScaleUp/
functional tests for SAPHanaSR-angi scale-up scenarios.
.TP
/usr/share/SAPHanaSR-tester/json/angi-ScaleOut/
functional tests for SAPHanaSR-angi scale-out ERP scenarios, without HANA host auto-failover.
.TP
/usr/share/SAPHanaSR-tester/json/angi-ScaleOut-BW/
functional tests for SAPHanaSR-angi scale-out BW scenarios, with HANA host auto-failover. Not yet implemented.
.TP
/usr/share/SAPHanaSR-tester/json/classic-ScaleUp/
functional tests for SAPHanaSR classic scale-up scenarios.
.TP
/usr/share/SAPHanaSR-tester/json/classic-ScaleOut/
not yet implemented.
.TP
/usr/share/SAPHanaSR-tester/json/classic-ScaleOut-BW/
not yet implemented.
.TP
$PWD/.test_properties
auto-generated properties file for called shell scripts. No need to touch.
.TP
/usr/bin/SAPHanaSR-testCluster
program to run a predefined testcase.
.PP
.\"
.SH REQUIREMENTS
.\"
See the REQUIREMENTS section in SAPHanaSR-tester(7).
.PP
.\"
.SH BUGS
In case of any problem, please use your favourite SAP support process to open
a request for the component BC-OP-LNX-SUSE.
Please report any other feedback and suggestions to feedback@suse.com.
.PP
.\"
.SH SEE ALSO
\fBSAPHanaSR-tester\fP(7) , \fBSAPHanaSR-testCluster\fP(8) ,
\fBSAPHanaSR-tests-angi-ScaleUp\fP(7) , \fBSAPHanaSR-tests-angi-ScaleOut\fP(7) ,
\fBSAPHanaSR-tests-classic-ScaleUp\fP(7) , \fBSAPHanaSR-tests-definition\fP(7) ,
\fBSAPHanaSR-tests-definition_on-fail-fence\fP(7) , 
\fBSAPHanaSR-showAttr\fP(8) , \fBSAPHanaSR-checkJson\fP(8) ,
.br
https://documentation.suse.com/sbp/sap/ ,
.br
https://documentation.suse.com/sles-sap/ ,
.br
https://www.suse.com/releasenotes/
.PP
.\"
.SH AUTHORS
F.Herschel, L.Pinne.
.PP
.\"
.SH COPYRIGHT
(c) 2023-2025 SUSE LLC
.br
The package SAPHanaSR-tester comes with ABSOLUTELY NO WARRANTY.
.br
For details see the GNU General Public License at
http://www.gnu.org/licenses/gpl.html
.\"
